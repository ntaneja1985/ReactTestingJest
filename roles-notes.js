[{"content":"import {render,screen} from '@testing-library/react';\r\n\r\nfunction RoleExample(){\r\n  return (\r\n    <div>\r\n    <a href = \"/\">Link</a>\r\n    <button>Button</button>\r\n    <footer>Content Info</footer>\r\n    <h1>Heading</h1>\r\n    <header>Banner</header>\r\n    <img alt=\"description\" /> Img\r\n    <input type=\"checkbox\"/> checkbox\r\n    <input type=\"number\" /> Spinbutton\r\n    <input type=\"radio\" /> radio\r\n    <input type = \"text\" /> Textbox\r\n    <li>List Item</li>\r\n    <ul>Listgroup</ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nrender(<RoleExample/>)","type":"code","id":"uac2x"},{"content":"test('can find elements by role',()=>{\r\n  render(<RoleExample/>)\r\n  const roles = [\r\n    'link',\r\n    'button',\r\n    'contentinfo',\r\n    'heading',\r\n    'banner',\r\n    'img',\r\n    'checkbox',\r\n    'spinbutton',\r\n    'radio',\r\n    'textbox',\r\n    'listitem',\r\n    'list'\r\n  ];\r\n\r\n  for(let role of roles)\r\n  {\r\n    const el = screen.getByRole(role);\r\n    expect(el).toBeInTheDocument();\r\n  }\r\n})","type":"code","id":"azyuu"},{"content":"function AccessibleName(){\r\n  return (\r\n    <div>\r\n    <button>Submit</button>\r\n    <button>Cancel</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nrender(<AccessibleName/>)","type":"code","id":"f8nwt"},{"content":"test('can select by accessible name',()=>{\r\n  render(<AccessibleName/>)\r\n  const submitBtn = screen.getByRole('button',{\r\n    name: /Submit/i\r\n  })\r\n  const cancelBtn = screen.getByRole('button',{\r\n    name: /Cancel/i\r\n  })\r\nexpect(submitBtn).toBeInTheDocument()\r\nexpect(cancelBtn).toBeInTheDocument()\r\n})","type":"code","id":"d2few"},{"content":"function MoreNames(){\r\n  return (\r\n    <div>\r\n    <label htmlFor=\"email\">Email</label>\r\n    <input id=\"email\" />\r\n\r\n    <label htmlFor=\"search\">Search</label>\r\n    <input id=\"search\"/>\r\n    </div>\r\n  )\r\n}","type":"code","id":"26mvo"},{"content":"test('make sure 2 inputs rendered',()=>{\r\n  render(<MoreNames/>);\r\n  const emailInput = screen.getByRole('textbox',{\r\n    name:/email/i\r\n  });\r\n\r\n  const searchInput = screen.getByRole('textbox',{\r\n    name:/search/i\r\n  });\r\n\r\n  expect(emailInput).toBeInTheDocument();\r\n  expect(searchInput).toBeInTheDocument();\r\n\r\n})","type":"code","id":"jvdao"},{"content":"function IconButtons(){\r\n  return (\r\n    <div>\r\n    <button aria-label=\"sign in\">\r\n    <svg />\r\n    </button>\r\n\r\n    <button aria-label=\"sign out\">\r\n    <svg />\r\n    </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nrender(<IconButtons/>)","type":"code","id":"po86z"},{"content":"test('find elements based on label',()=>{\r\n\r\n  render(<IconButtons/>)\r\n  const signInButton = screen.getByRole('button',{\r\n    name: /sign in/i\r\n  });\r\n\r\n  const signOutButton = screen.getByRole('button',{\r\n    name: /sign out/i\r\n  });\r\n\r\nexpect(signInButton).toBeInTheDocument();\r\n  expect(signOutButton).toBeInTheDocument();\r\n\r\n\r\n})","type":"code","id":"5z31r"}]